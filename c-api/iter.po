# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-17 22:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

msgid "Iterator Protocol"
msgstr ""

msgid "There are two functions specifically for working with iterators."
msgstr ""

msgid ""
"Return non-zero if the object *o* can be safely passed to :c:func:"
"`PyIter_Next`, and ``0`` otherwise.  This function always succeeds."
msgstr ""

msgid ""
"Return non-zero if the object *o* provides the :class:`AsyncIterator` "
"protocol, and ``0`` otherwise.  This function always succeeds."
msgstr ""

msgid ""
"Return the next value from the iterator *o*.  The object must be an iterator "
"according to :c:func:`PyIter_Check` (it is up to the caller to check this). "
"If there are no remaining values, returns ``NULL`` with no exception set. If "
"an error occurs while retrieving the item, returns ``NULL`` and passes along "
"the exception."
msgstr ""

msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr ""

msgid ""
"The enum value used to represent different results of :c:func:`PyIter_Send`."
msgstr ""

msgid "Sends the *arg* value into the iterator *iter*. Returns:"
msgstr ""

msgid ""
"``PYGEN_RETURN`` if iterator returns. Return value is returned via *presult*."
msgstr ""

msgid ""
"``PYGEN_NEXT`` if iterator yields. Yielded value is returned via *presult*."
msgstr ""

msgid ""
"``PYGEN_ERROR`` if iterator has raised and exception. *presult* is set to "
"``NULL``."
msgstr ""
